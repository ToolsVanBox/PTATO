params {
  dummy = 'None'
}

process {
  withLabel: bedtools_2_30_0_sort {
    params.bedtoolssort.mem = '10G'
    params.bedtoolssort.time = '10m'
    params.bedtoolssort.optional = ''
    time = params.bedtoolssort.time
    memory = params.bedtoolssort.mem
  }
  withLabel: bedtools_2_30_0_closest {
    params.bedtoolsclosest.mem = '10G'
    params.bedtoolsclosest.time = '10m'
    params.bedtoolsclosest.optional = '-d'
    time = params.bedtoolsclosest.time
    memory = params.bedtoolsclosest.mem
  }
  withLabel: bedtools_2_30_0_intersect {
    params.bedtoolsintersect.mem = '10G'
    params.bedtoolsintersect.time = '10m'
    params.bedtoolsintersect.optional = '-wa -loj'
    time = params.bedtoolsintersect.time
    memory = params.bedtoolsintersect.mem
  }
  withLabel: bedtools_2_30_0_merge {
    params.bedtoolsmerge.mem = '10G'
    params.bedtoolsmerge.time = '10m'
    params.bedtoolsmerge.optional = '-s -d -1'
    time = params.bedtoolsmerge.time
    memory = params.bedtoolsmerge.mem
  }
  withLabel: bedtools_2_30_0_intersectAll {
    params.bedtoolsintersectall.mem = '10G'
    params.bedtoolsintersectall.time = '10m'
    params.bedtoolsintersectall.optional = '-wa -loj'
    time = params.bedtoolsintersectall.time
    memory = params.bedtoolsintersectall.mem
  }
  withLabel: bedtools_2_30_0_mergeAll {
    params.bedtoolsmergeall.mem = '10G'
    params.bedtoolsmergeall.time = '10m'
    params.bedtoolsmergeall.optional = '-d -1 -s -c 4,5,6,7,14 -o distinct,distinct,distinct,collapse,collapse -delim ";"'
    time = params.bedtoolsmergeall.time
    memory = params.bedtoolsmergeall.mem
  }
  withLabel: bedtools_2_30_0_intersectPON {
    params.bedtoolsintersectpon.mem = '10G'
    params.bedtoolsintersectpon.time = '10m'
    params.bedtoolsintersectpon.optional = '-header -v'
    time = params.bedtoolsintersectpon.time
    memory = params.bedtoolsintersectpon.mem
  }
  withLabel: shapeit_4_2_2 {
    params.shapeit.mem = '40G'
    params.shapeit.time = '4h'
    params.shapeit.cpus = 8
    params.shapeit.optional = ''
    time = params.shapeit.time
    memory = params.shapeit.mem
    cpus = params.shapeit.cpus
  }
  withLabel: bgzip_1_15 {
    params.bgzip.mem = '10G'
    params.bgzip.time = '1h'
    params.bgzip.optional = ''
    time = params.bgzip.time
    memory = params.bgzip.mem
  }
  withLabel: tabix_1_15 {
    params.tabix.mem = '10G'
    params.tabix.time = '1h'
    params.tabix.optional = ''
    time = params.tabix.time
    memory = params.tabix.mem
  }
  withLabel: walker_2_1_2 {
    params.walker.mem = '20G'
    params.walker.time = '8h'
    params.walker.cpus = 8
    time = params.walker.time
    memory = params.walker.mem
    cpus = params.walker.cpus
  }
  withLabel: SMuRF_2_1_5 {
    params.smurf.mem = '20G'
    params.smurf.time = '2h'
    params.smurf.cpus = 8
    time = params.smurf.time
    memory = params.smurf.mem
    cpus = params.smurf.cpus
  }
  withLabel: GATK_4_1_3_0_CollectAlignmentSummaryMetrics {
    params.collectalignmentsummarymetrics.mem = '24G'
    params.collectalignmentsummarymetrics.time = '8h'
    params.collectalignmentsummarymetrics.optional = ''
    memory = params.collectalignmentsummarymetrics.mem
    time = params.collectalignmentsummarymetrics.time
  }
  withLabel : GATK_4_1_3_0_CollectWGSMetrics {
    params.collectwgsmetrics.mem = '20G'
    params.collectwgsmetrics.time = '8h'
    params.collectwgsmetrics.optional = ''
    memory = params.collectwgsmetrics.mem
    time = params.collectwgsmetrics.time
  }

  withLabel : GATK_4_1_3_0_SplitVcfs {
    params.splitvcfs.mem = '20G'
    params.splitvcfs.time = '8h'
    params.splitvcfs.optional = ''
    memory = params.splitvcfs.mem
    time = params.splitvcfs.time
  }

  withLabel : GATK_4_1_3_0_GetSampleName {
    params.getsamplename.mem = '10G'
    params.getsamplename.time = '10m'
    params.getsamplename.optional = ''
    memory = params.getsamplename.mem
    time = params.getsamplename.time
  }


  withLabel: gridss_2_13_2 {
    params.gridss.mem = '20G'
    params.gridss.time = '48h'
    params.gridss.cpus = '8'
    params.gridss.optional = '--maxcoverage 200'
    memory = params.gridss.mem
    time = params.gridss.time
    cpus = params.gridss.cpus
  }
  withLabel: gridss_2_13_2_AnnotateInsertedSequence {
    params.annotateinsertedsequence.mem = '10G'
    params.annotateinsertedsequence.time = '12h'
    params.annotateinsertedsequence.cpus = '8'
    params.annotateinsertedsequence.optional = ''
    memory = params.annotateinsertedsequence.mem
    time = params.annotateinsertedsequence.time
    cpus = params.annotateinsertedsequence.cpus
  }

  withLabel: gripss_purple_linx_1_3_2_GripssApplicationKt {
    params.gripssapplicationkt.mem = '100G'
    params.gripssapplicationkt.time = '12h'
    params.gripssapplicationkt.optional = ''
    memory = params.gripssapplicationkt.mem
    time = params.gripssapplicationkt.time
  }

  withLabel: gripss_purple_linx_1_3_2_GripssHardFilterApplicationKt {
    params.gripsshardfilterapplicationkt.mem = '40G'
    params.gripsshardfilterapplicationkt.time = '12h'
    params.gripsshardfilterapplicationkt.optional = ''
    memory = params.gripsshardfilterapplicationkt.mem
    time = params.gripsshardfilterapplicationkt.time
  }
  withLabel: gripss_purple_linx_1_3_2_CountBamLinesApplication {
    params.countbamlinesapplication.mem = '40G'
    params.countbamlinesapplication.time = '24h'
    params.countbamlinesapplication.cpus = '8'
    params.countbamlinesapplication.optional = ''
    memory = params.countbamlinesapplication.mem
    time = params.countbamlinesapplication.time
    cpus = params.countbamlinesapplication.cpus
  }

  withLabel: FilterCobalt {
    params.filtercobalt.mem = '10G'
    params.filtercobalt.time = '1h'
    params.filtercobalt.optional = '1000000 0.01 0.99'
    memory = params.filtercobalt.mem
    time = params.filtercobalt.time
  }

  withLabel: FilterBAF {
    params.filterbaf.mem = '10G'
    params.filterbaf.time = '1h'
    params.filterbaf.optional = '1000000 5 10'
    memory = params.filterbaf.mem
    time = params.filterbaf.time
  }

  withLabel: FilterGripss {
    params.filtergripss.mem = '10G'
    params.filtergripss.time = '1h'
    params.filtergripss.optional = '100 150'
    memory = params.filtergripss.mem
    time = params.filtergripss.time
  }

  withLabel: IntegrateSvFiles {
    params.integratesvfiles.mem = '10G'
    params.integratesvfiles.time = '1h'
    params.integratesvfiles.optional = ''
    memory = params.integratesvfiles.mem
    time = params.integratesvfiles.time
  }

  withLabel: CreateSvPlots {
    params.createsvplots.mem = '10G'
    params.createsvplots.time = '1h'
    params.createsvplots.optional = ''
    memory = params.createsvplots.mem
    time = params.createsvplots.time
  }

  withLabel: CreateCircosConfig {
    params.createcircosconfig.mem = '10G'
    params.createcircosconfig.time = '1h'
    params.createcircosconfig.optional = ''
    memory = params.createcircosconfig.mem
    time = params.createcircosconfig.time
  }

  withLabel: SnpSift_4_3_1t__1 {
    params.snpsift.mem = '20G'
    params.snpsift.time = '8h'
    params.snpsift.cpus = '8'
    params.snpsift.optional = ''
    memory = params.snpsift.mem
    time = params.snpsift.time
    cpus = params.snpsift.cpus
  }

  withLabel: Circos {
    params.circos.mem = '10G'
    params.circos.time = '1h'
    params.circos.optional = ''
    memory = params.circos.mem
    time = params.circos.time
  }

  withLabel: getContext {
    params.getcontext.mem = '80G'
    params.getcontext.time = '20m'
    time = params.getcontext.time
    memory = params.getcontext.mem
  }
  withLabel: createABtable {
    params.createabtable.mem = '30G'
    params.createabtable.time = '1h'
    params.createabtable.optional = ''
    time = params.createabtable.time
    memory = params.createabtable.mem
  }
}
